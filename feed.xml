<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XHTMLBoy's Website</title><link>https://xhtmlboi.github.io</link><atom:link href="https://xhtmlboi.github.io/feed.xml" rel="self" type="application/rss+xml" /><description>You are on a website dedicated to the enthusiasts of (valid) XHTML, and of beautiful mechanics.</description><generator>YOCaml</generator><webMaster>xhtmlboi@gmail.com (The XHTMLBoy)</webMaster><item><title>Some highlights of how this blog is generated</title><link>https://xhtmlboi.github.io/articles/yocaml.html</link><pubDate>Sun, 14 Nov 2021 10:00:00 GMT</pubDate><description>Being a Java Champion means communicating. To communicate, you need communication channels. What better way to talk about silly things than with a stark blog? In this article, we'll show you how this blog works.</description><guid isPermaLink="false">https://xhtmlboi.github.io/articles/yocaml.html</guid></item><item><title>Understanding "Existential Types" with Java</title><link>https://xhtmlboi.github.io/articles/existential_java.html</link><pubDate>Mon, 16 Aug 2021 10:00:00 GMT</pubDate><description>An existential type (or "existentially quantified type") is a complicated type system fanatic thing. But to become a Java Champion, it's a must. Let's learn how to use it, in Java, of course.</description><guid isPermaLink="false">https://xhtmlboi.github.io/articles/existential_java.html</guid></item><item><title>Type-dependent instances in Java</title><link>https://xhtmlboi.github.io/articles/dependent_java.html</link><pubDate>Sun, 08 Aug 2021 10:00:00 GMT</pubDate><description>While studying Java (to become a real Java-Champion) I came across a feature I didn't know about, "type-dependent instances". Incredible!</description><guid isPermaLink="false">https://xhtmlboi.github.io/articles/dependent_java.html</guid></item><item><title>Implementing a minimalist mathematical statement prover with Java</title><link>https://xhtmlboi.github.io/articles/java_proof_theorem.html</link><pubDate>Sun, 18 Apr 2021 10:00:00 GMT</pubDate><description>The world of Proof Assistants is quite related to complicated functional programming languages. But it is possible, quite simply, to write a minimalist proof assistant in Java.</description><guid isPermaLink="false">https://xhtmlboi.github.io/articles/java_proof_theorem.html</guid></item></channel></rss>